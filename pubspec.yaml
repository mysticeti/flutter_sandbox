name: flutter_sandbox
description: A new Flutter sandbox application

# The following line prevents the package from being accidentally published to
# pub.dev using `pub publish`. This is preferred for private packages.
publish_to: "none" # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.0.0+1

environment:
  sdk: ">=2.7.0 <3.0.0"

dependencies:
  flutter:
    sdk: flutter
  flutter_localizations:
    sdk: flutter
  intl: ^0.17.0

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2
  mapbox_gl: ^0.13.0
  firebase_core: ^1.8.0
  firebase_auth: ^3.1.4
  firebase_crashlytics: ^2.2.4
  cloud_firestore: ^2.5.4
  cloud_functions: ^3.0.5
  modal_progress_hud: ^0.1.3 # not null safe
  provider: ^6.0.1
  camera: ^0.9.4+3
  video_player: ^2.2.6
  path_provider: ^2.0.6
  date_format: ^2.0.4
  geolocator: ^7.7.1
  google_maps_flutter: ^2.1.0
  google_maps_flutter_web: ^0.3.2
  permission_handler: ^8.2.5
  parallax_image: ^0.3.1+1 #not null safe
  getwidget: ^2.0.4
  rive: ^0.7.33
  firebase_messaging: ^10.0.9
  flutter_local_notifications: ^9.0.2
  lottie: ^1.2.1
  firebase_analytics: ^8.3.4
  firebase_storage: ^10.0.6
  image_picker: ^0.8.4+4
  flutter_speed_dial: ^4.6.6
  google_sign_in: ^5.2.1
  flutter_signin_button: ^2.0.0
  just_audio: ^0.9.15
  sembast: ^3.1.1
  sembast_web: ^2.0.1+1
  moor: ^4.6.1+1 # package needs to be migrated to drift due to name change
  sqlite3_flutter_libs: ^0.5.0
  path: ^1.8.0
  fl_chart: ^0.40.2
  cool_alert: ^1.1.0
  shared_preferences: ^2.0.8
  http: ^0.13.4
  google_ml_kit: ^0.7.2
  google_fonts: ^2.1.0
  flutter_map: ^0.14.0
  latlong2: ^0.8.1

dev_dependencies:
  flutter_test:
    sdk: flutter
  flutter_native_splash: ^1.2.3
  flutter_launcher_icons: ^0.9.2
  moor_generator: ^4.5.1
  build_runner: ^2.1.1

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:
  generate: true

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - lib/mapbox/mapbox_asset/
    - assets/symbols/
    - assets/rive/
    - assets/logo/
    - assets/lottie/
    - assets/audio/
    - assets/google_fonts/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
flutter_native_splash:
  # This package generates native code to customize Flutter's default white native splash screen
  # with background color and splash image.
  # Customize the parameters below, and run the following command in the terminal:
  # flutter pub run flutter_native_splash:create
  # To restore Flutter's default white splash screen, run the following command in the terminal:
  # flutter pub run flutter_native_splash:remove

  # color or background_image is the only required parameter.  Use color to set the background
  # of your splash screen to a solid color.  Use background_image to set the background of your
  # splash screen to a png image.  This is useful for gradients. The image will be stretch to the
  # size of the app. Only one parameter can be used, color and background_image cannot both be set.
  color: "#ffffff"
  #background_image: "assets/background.png"

  # Optional parameters are listed below.  To enable a parameter, uncomment the line by removing
  # the leading # character.

  # The image parameter allows you to specify an image used in the splash screen.  It must be a
  # png file.
  image: assets/splash.png

  # The color_dark, background_image_dark, and image_dark are parameters that set the background
  # and image when the device is in dark mode. If they are not specified, the app will use the
  # parameters from above. If the image_dark parameter is specified, color_dark or
  # background_image_dark must be specified.  color_dark and background_image_dark cannot both be
  # set.
  color_dark: "#202020"
  background_image_dark: "assets/splash.png"
  #image_dark: assets/splash-invert.png

  # The android, ios and web parameters can be used to disable generating a splash screen on a given
  # platform.
  #android: false
  #ios: false
  #web: false

  # The position of the splash image can be set with android_gravity, ios_content_mode, and
  # web_image_mode parameters.  All default to center.
  #
  # android_gravity can be one of the following Android Gravity (see
  # https://developer.android.com/reference/android/view/Gravity): bottom, center,
  # center_horizontal, center_vertical, clip_horizontal, clip_vertical, end, fill, fill_horizontal,
  # fill_vertical, left, right, start, or top.
  android_gravity: center
  #
  # ios_content_mode can be one of the following iOS UIView.ContentMode (see
  # https://developer.apple.com/documentation/uikit/uiview/contentmode): scaleToFill,
  # scaleAspectFit, scaleAspectFill, center, top, bottom, left, right, topLeft, topRight,
  # bottomLeft, or bottomRight.
  ios_content_mode: center
  #
  # web_image_mode can be one of the following modes: center, contain, stretch, and cover.
  web_image_mode: center

  # To hide the notification bar, use the fullscreen parameter.  Has no affect in web since web
  # has no notification bar.  Defaults to false.
  # NOTE: Unlike Android, iOS will not automatically show the notification bar when the app loads.
  #       To show the notification bar, add the following code to your Flutter app:
  #       WidgetsFlutterBinding.ensureInitialized();
  #       SystemChrome.setEnabledSystemUIOverlays([SystemUiOverlay.bottom, SystemUiOverlay.top]);
  fullscreen: false

  # If you have changed the name(s) of your info.plist file(s), you can specify the filename(s)
  # with the info_plist_files parameter.  Remove only the # characters in the three lines below,
  # do not remove any spaces:
  #info_plist_files:
  #  - 'ios/Runner/Info-Debug.plist'
  #  - 'ios/Runner/Info-Release.plist'

flutter_icons:
  android: "ic_launcher"
  ios: false
  image_path: "assets/logo/geovation_app_icon.png"
  adaptive_icon_background: "#ffffff"
  adaptive_icon_foreground: "assets/logo/geovation_app_icon_foreground.png"
